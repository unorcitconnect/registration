# Multi-stage build for Railway deployment
FROM node:20 AS frontend-builder

WORKDIR /app/frontend
COPY frontend/package*.json ./
RUN npm install
COPY frontend/ ./
RUN npm run build

FROM golang:1.24.4-alpine AS backend-builder

WORKDIR /app
COPY go.mod go.sum ./
RUN go mod download
COPY . .
ENV CGO_ENABLED=0
ENV GOOS=linux
ENV GOARCH=amd64
RUN go build -ldflags="-w -s" -o main cmd/api/main.go

FROM alpine:3.20.1 AS production

# Install ca-certificates for HTTPS requests
RUN apk --no-cache add ca-certificates
WORKDIR /root/

# Copy the binary from builder
COPY --from=backend-builder /app/main .

# Copy the frontend build from frontend-builder
COPY --from=frontend-builder /app/frontend/dist ./frontend/dist

# Expose port (Railway will set the PORT environment variable)
EXPOSE $PORT

# Run the binary
CMD ["./main"]
